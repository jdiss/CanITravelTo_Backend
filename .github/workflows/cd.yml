
name: CD

on:
  release:
    types: [created]
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      
    - name: Decrypt Creds
      run: |
        gpg --quiet --batch --yes --decrypt --passphrase="$LARGE_SECRET_PASSPHRASE" --output BusinessHandler/Creds/creds.json BusinessHandler/Creds/creds.json.gpg
        chmod 600 BusinessHandler/Creds/creds.json
        gpg --quiet --batch --yes --decrypt --passphrase="$LARGE_SECRET_PASSPHRASE" --output DataRetriever/Creds/creds.json DataRetriever/Creds/creds.json.gpg
        chmod 600 DataRetriever/Creds/creds.json
      env:
         LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}  
      
    - name: Build and push Docker images
      run: |
        cd BusinessHandler
        docker build -t docker.pkg.github.com/marcllort/canitravelto_backend/business-handler:$(git rev-parse --short HEAD) .
        cd ../DataRetriever
        docker build -t docker.pkg.github.com/marcllort/canitravelto_backend/data-retriever:$(git rev-parse --short HEAD) .
        echo ${GITHUB_TOKEN} | docker login docker.pkg.github.com -u marcllort --password-stdin
        docker push docker.pkg.github.com/marcllort/canitravelto_backend/business-handler:$(git rev-parse --short HEAD)
        docker push docker.pkg.github.com/marcllort/canitravelto_backend/data-retriever:$(git rev-parse --short HEAD)   
      env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
    - name: Decrypt PEM and update production version
      run: |
        gpg --quiet --batch --yes --decrypt --passphrase="$LARGE_SECRET_PASSPHRASE" --output key-aws.pem BusinessHandler/Creds/key-aws.pem.gpg
        chmod 600 key-aws.pem
        ssh -oStrictHostKeyChecking=no -i key-aws.pem ubuntu@ec2-35-180-85-2.eu-west-3.compute.amazonaws.com './update.sh && exit'
      env:
         LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}

